{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\src\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  let soiltypequery_tq = \"M''\";\n  let texturequery_tq = \"ls\";\n\n  let soiltype_loading = false;\n  let texture_loading = false;\n  \n  let soiltypequery_error = \"\";\n  let texturequery_error = \"\";\n\n  let soiltypequery_result = [];\n  let texturequery_result = [];\n\n  // async data fetching function\n  async function querySoilType() {\n    soiltype_loading = true;\n    const q = { 'tq': soiltypequery_tq };\n    const req_data = JSON.stringify(q);\n\n    try {\n      const response = await fetch(\n        \"https://europe-west1-glomodat.cloudfunctions.net/estsoil_cf\",\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: req_data\n        }\n      );\n\n      const data = await response.json();\n      soiltypequery_result = [];\n      for (const [key, value] of Object.entries(data)) {\n        // console.log(key, value);\n        soiltypequery_result.push({\"name\": key, \"value\": value});\n      }\n      soiltype_loading = false;\n      // console.log(data)\n      return data;\n    } catch (err) {\n      // catches errors both in fetch and response.json\n      console.log(err.toString())\n      soiltype_loading = false;\n      soiltypequery_error = `${err.toString()}`;\n    }\n  }\n\n  async function queryTexture() {\n    texture_loading = true;\n    const q = { 'tq': texturequery_tq };\n    const req_data = JSON.stringify(q);\n\n    try {\n      const response = await fetch(\n        \"https://europe-west1-glomodat.cloudfunctions.net/estsoil_lm\",\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: req_data\n        }\n      );\n\n      const data = await response.json();\n      texturequery_result = [];\n      for (const [key, value] of Object.entries(data)) {\n        // console.log(key, value);\n        texturequery_result.push({\"name\": key, \"value\": value});\n      }\n      // console.log(data)\n      texture_loading = false;\n      return data;\n    } catch (err) {\n      // catches errors both in fetch and response.json\n      console.log(err.toString())\n      texture_loading = false;\n      texturequery_error = `${err.toString()}`;\n    }\n  }\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <h1>Soil Texture Demo App</h1>\n\n        <p>\n          Visit the\n          <a href=\"https://www.earth-syst-sci-data-discuss.net/essd-2019-192/\">\n            EstSoil-EH v1.0: An eco-hydrological modelling parameters dataset\n            derived from the Soil Map of Estonia\n          </a>\n          to learn more about the dataset.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"soiltypequery\">Soiltype / Siffer</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              bind:value={soiltypequery_tq}\n              id=\"soiltypequery\"\n              aria-describedby=\"SoilTypeHelp\" />\n            {#if soiltypequery_error.length > 0}\n              <small id=\"SoilTypeHelp\" class=\"form-text\" style=\"color: red;\">\n                {soiltypequery_error}\n              </small>\n            {/if}\n          </div>\n          <p>\n            <a on:click={querySoilType} class=\"btn btn-primary\">Submit</a>\n            {#if soiltype_loading}\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Querying...</span>\n            </div>\n            {/if}\n          </p>\n        </form>\n\n        <div class=\"card\">\n            <div class=\"card-header\">{soiltypequery_tq}</div>\n            <ul class=\"list-group list-group-flush\">\n            {#each soiltypequery_result as elem}\n              <li class=\"list-group-item\">{elem.name} - {elem.value}</li>\n            {/each}\n              \n            </ul>\n        </div>\n\n      </div>\n\n      <div class=\"col-4\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"texturequery\">Texture / LÃµimis</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"texturequery\"\n              bind:value={texturequery_tq} />\n          </div>\n\n          {#if texturequery_error.length > 0}\n            <small id=\"TextureQueryHelp\" class=\"form-text\" style=\"color: red;\">\n              {texturequery_error}\n            </small>\n          {/if}\n\n          <p>\n            <a on:click={queryTexture} class=\"btn btn-primary\">Submit</a>\n            {#if texture_loading}\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Querying...</span>\n            </div>\n            {/if}\n          </p>\n        </form>\n\n        <div class=\"card\">\n          <div class=\"card-header\">{texturequery_tq}</div>\n            <ul class=\"list-group list-group-flush\">\n            {#each texturequery_result as elem}\n              <li class=\"list-group-item\">{elem.name} - {elem.value}</li>\n            {/each}\n        </div>\n      </div>\n    </div>\n  </div>\n</main>\n"
  ],
  "names": [],
  "mappings": "AAsFE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC"
}